<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration>Release</Configuration>
    <Platform>Any CPU</Platform>

    <RootFolderPath>$(MSBuildStartupDirectory)\..\</RootFolderPath>
    <SolutionFilePath>$(RootFolderPath)\Architecture3.sln</SolutionFilePath>
    <PackagesPath>$(RootFolderPath)\packages</PackagesPath>
    <BuildResultFolderPath>$(RootFolderPath)\build_results</BuildResultFolderPath>
    <BuildResultReportsFolderPath>$(BuildResultFolderPath)\reports</BuildResultReportsFolderPath>
    <NugetPackageFolderPath>$(BuildResultFolderPath)\nugetpackages</NugetPackageFolderPath>
    
    <TestsFolderPath>$(RootFolderPath)\Tests\**\bin\$(Configuration)</TestsFolderPath>
    <TestsAssemblies>$(TestsFolderPath)\*.Tests.dll</TestsAssemblies>
    <CleanDirectories>$(RootFolderPath)\Projects\**\obj\$(Configuration)\**;$(RootFolderPath)\Projects\**\bin\$(Configuration)\**;$(RootFolderPath)\Projects\Architecture3.Web\bin\**;$(RootFolderPath)\Tests\**\obj\$(Configuration)\**;$(RootFolderPath)\Tests\**\bin\$(Configuration)\**</CleanDirectories>
    <DeleteFiles>$(RootFolderPath)\Projects\Architecture3.Web\bin\*</DeleteFiles>
    
    <NugetPathScript>
      public static string ScriptMain()
      {
      return Directory.GetDirectories(@"$(PackagesPath)", "NuGet.CommandLine.*").FirstOrDefault();
      }
    </NugetPathScript>
  
    <NUnitPathScript>
      public static string ScriptMain() 
      {
      return Directory.GetDirectories(@"$(PackagesPath)", "NUnit.ConsoleRunner.*").FirstOrDefault();
      }
    </NUnitPathScript>  
  </PropertyGroup>

  <Import Project="$(PackagesPath)\MSBuildTasks.*\tools\MSBuild.Community.Tasks.Targets"/>

  <Target Name="CI" DependsOnTargets="Clean;RestoreNugetPackages;CompileDotNetCode;ExecuteNUnitTests"/>

  <Target Name="DTest" DependsOnTargets="Clean;RestoreNugetPackages;CompileDotNetCodeCreateOctopack;ExecuteNUnitTests"/>

  <Target Name="D" DependsOnTargets="Clean;RestoreNugetPackages;CompileDotNetCodeCreateOctopack;ExecuteNUnitTests;PublishNugetPackages"/>

  <Target Name="Clean">
    <Message Importance="high" Text="Executing Clean"/>
    <ItemGroup>
      <FilesToDelete Include="$(DeleteFiles)"/>
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <RemoveDir Directories="$(BuildResultReportsFolderPath);$(NugetPackageFolderPath)" />
    <MakeDir Directories = "$(BuildResultReportsFolderPath);$(NugetPackageFolderPath)" />
    <DeleteTree Directories="$(CleanDirectories)" ContinueOnError="true"/>
    <Delete Files="$(FilesToDelete)" ContinueOnError="true"/>
    <Message Importance="high" Text="Finished Clean"/>
  </Target>
  
  <Target Name="CompileDotNetCode">
    <Message Importance="high" Text="Executing CompileDotNetCode"/>
    <ItemGroup>
      <ProjectFiles Include="$(SolutionFilePath)"/>
    </ItemGroup>
    <MSBuild Projects="@(ProjectFiles)" Properties="Configuration=$(Configuration);Platform=$(Platform);RunFromVS=false"/>
    <Message Importance="high" Text="Finished CompileDotNetCode"/>
  </Target>

  <Target Name="CompileDotNetCodeCreateOctopack">
    <Message Importance="high" Text="Executing CompileDotNetCode"/>
    <ItemGroup>
      <ProjectFiles Include="$(SolutionFilePath)"/>
    </ItemGroup>
    <MSBuild Projects="@(ProjectFiles)" Properties="Configuration=$(Configuration);Platform=$(Platform);RunOctoPack=true;OctoPackPublishPackageToFileShare=$(NugetPackageFolderPath);RunFromVS=false"/>
    <Message Importance="high" Text="Finished CompileDotNetCode"/>
  </Target>

  <Target Name="GetNugetCmdExe">
    <Message Importance="high" Text="Executing GetNugetCmdExe" />
    <Script Language="C#" Code="$(NugetPathScript)" Imports="System.Linq">
      <Output TaskParameter="ReturnValue" PropertyName="NugetPath" />
    </Script>
    <CreateProperty Value="$(NugetPath)\tools\NuGet.exe">
      <Output TaskParameter="Value" PropertyName="NugetCmdExe"/>
    </CreateProperty>
    <Message Importance="high" Text="Finished GetNugetCmdExe: $(NugetCmdExe)" />
  </Target>

  <Target Name="RestoreNugetPackages" DependsOnTargets="GetNugetCmdExe">
    <Message Importance="high" Text="Executing RestoreNugetPackages" />
    <Exec Command="$(NugetCmdExe) restore $(SolutionFilePath)"  />
    <Message Importance="high" Text="Finsihed RestoreNugetPackages" />
  </Target>

  <Target Name="GetNUnitCmdExe">
    <Message Importance="high" Text="Executing GetNUnitCmdExe" />
    <Script Language="C#" Code="$(NUnitPathScript)" Imports="System.Linq">
      <Output TaskParameter="ReturnValue" PropertyName="NUnitPath" />
    </Script>
    <CreateProperty Value="$(NUnitPath)\tools\nunit3-console.exe">
      <Output TaskParameter="Value" PropertyName="NUnitCmdExe"/>
    </CreateProperty>
    <Message Importance="high" Text="Finished GetNUnitCmdExe: $(NUnitCmdExe)" />
  </Target>

  <Target Name="ExecuteNUnitTests" DependsOnTargets="GetNUnitCmdExe">
    <Message Importance="high" Text="Executing ExecuteNUnitTests"/>
    <ItemGroup>
      <NUnitTestDlls Include="$(TestsAssemblies)" />
    </ItemGroup>
    <ItemGroup>
      <TempProjectsNUnit Include="$(MSBuildProjectFile)" >
        <Properties>NUnitTestDllFile=%(NUnitTestDlls.FullPath);NUnitCmdExe=$(NUnitCmdExe)</Properties>
      </TempProjectsNUnit>
    </ItemGroup>
    <MSBuild Projects="@(TempProjectsNUnit)" BuildInParallel="true" Targets="RunOneNUnitTestDll" />
    <Message Importance="high" Text="Finished ExecuteNUnitTests"/>
  </Target>

  <Target Name="RunOneNUnitTestDll">
    <Message Importance="high" Text="Executing RunOneNUnitTestDll: $(NUnitTestDllFile)" />
    <ItemGroup>
      <ThisDll Include="$(NUnitTestDllFile)"/>
    </ItemGroup>
    <Exec Command="$(NUnitCmdExe) @(ThisDll) --result=$(BuildResultReportsFolderPath)\%(ThisDll.Filename).Results.nunit.xml" />
    <Message Importance="high" Text="Finnished RunOneNUnitTestDll: $(NUnitTestDllFile)" />
  </Target>

  <Target Name="PublishNugetPackages" DependsOnTargets="GetNugetCmdExe">
    <Message Importance="high" Text="Executing PublishNugetPackages" />
    <Exec WorkingDirectory="$(NugetPackageFolderPath)" Command="$(NugetCmdExe) push Architecture3.DbMigrator.*.nupkg -ApiKey $(OctopusNugetApiKey) -Source $(OctopusNugetServerUrl)" />
    <Exec WorkingDirectory="$(NugetPackageFolderPath)" Command="$(NugetCmdExe) push Architecture3.Web.*.nupkg -ApiKey $(OctopusNugetApiKey) -Source $(OctopusNugetServerUrl)" />
    <Message Importance="high" Text="Finished PublishNugetPackages" />
  </Target>

</Project>